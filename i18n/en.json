{
  "特性": "characteristic",
  "实时渲染生成": "Real time rendering generation",
  "支持原生HTML": "Native HTML support",
  "支持多个文档同时渲染": "Support simultaneous rendering of multiple documents",
  "原理": "principle",
  "该库主要由两部分构成": "The library is mainly composed of two parts",
  "命令行工具": "Command Line Tools",
  "函数API": "Function API",
  "解析配置文件、执行render逻辑，最后生成Markdown文件": "Parse configuration files, execute render logic, and finally generate Markdown files",
  "提供对标Markdown语法的基础组件及render函数": "Provides basic components and render functions of benchmarking Markdown syntax",
  "用于替代Markdown语法的基础组件": "Basic components for replacing Markdown syntax",
  "渲染JSX编写的内容，返回生成的字符内容": "Render the content written by JSX and return the generated character content",
  "一款支持通过 JSX 来编写 Markdown 的工具": "A tool that supports writing Markdown through JSX",
  "安装": "install",
  "或者": "perhaps",
  "​创建JSX文件": "Create JSX file",
  "在根目录下创建一个名为{0}的目录，并在该目录下创建{1}文件": "Create a directory named {0} under the root directory, and create {1} files under this directory",
  "其他相关文件": "Other relevant documents",
  "假如{0}的内容如下：": "Suppose the content of {0} is as follows:",
  "这里JSX语法采用的是 React.createElement 的形式，所以这里需要默认导入 React": "Here, the JSX syntax is React The form of createElement, so we need to import React by default",
  "初始化命令行配置文件": "Initialize command line configuration file",
  "在命令行终端输入如下命令，": "Enter the following command at the command line terminal,",
  "命令列表": "Command List",
  "更多命令": "More Commands",
  "然后会在当前目录下生成一个{0}的文件": "Then a {0} file will be generated in the current directory",
  "然后你的文件目录是这样的": "Then your file directory is like this",
  "调整{0}配置": "Adjust {0} configuration",
  "根据需求自行调整配置文件中的配置项，配置项的{0}": "Adjust the configuration items in the configuration file according to the requirements",
  "命令行": "command line",
  "说明": "explain",
  "默认的配置如下：": "The default configuration is as follows:",
  "执行生成命令": "Execute build command",
  "用法": "usage",
  "愿景": "vision",
  "为了让通过{0}来编写{1}成为件轻松且愉快的事{2}": "To make it easy and pleasant to write {1} through {0} {2}",
  "基础组件": "Basic components",
  "render函数": "Render function",
  "所以{0}和{1}这两者搭配使用效果更佳": "So {0} and {1} are better used together",
  "数字": "number",
  "货币": "currency",
  "日期": "date",
  "时间": "time",
  "复数": "complex",
  "格式化{0}类型动态参数的回调，对应的类型标记是{1}{2}{3}": "Format the callback of dynamic parameter of type {0}, and the corresponding type tag is {1} {2} {3}",
  "或": "or",
  "函数列表": "Function List",
  "下面的类型是以{0}语法来表示的": "The following types are expressed in {0} syntax",
  "函数名": "Function Name",
  "类型": "type",
  "获取国际化文本": "Get internationalized text",
  "内部会根据当前语言{0}从语言包{1}中获取{2}对应的翻译文本，未匹配到对应翻译内容会直接显示{3}本身内容": "Internally, the translation text corresponding to {2} will be obtained from the language pack {1} according to the current language {0}, and the content of {3} itself will be directly displayed if the corresponding translation content is not matched",
  "待翻译的文本": "Text to be translated",
  "表示动态参数，没有个数限制，{0}文本中需要以{1}的形式来接收，{2}表示动态参数的位置，从 0 开始（可在{3}中自定义起始值），第1个参数对应 0，对2个参数对应1，以此往复": "It represents a dynamic parameter without number limitation. The {0} text needs to be received in the form of {1}. The {2} represents the position of the dynamic parameter, starting from 0 (you can customize the starting value in {3}). The first parameter corresponds to 0, and the second parameter corresponds to 1, and so on",
  "例如": "for example",
  "这个男人叫{0}，意外获得了超能力，这个女人叫{1}，意外被{2}追杀，这个小孩叫{3}，意外遭遇了意外": "This man is called {0}, and he accidentally gained super power. This woman is called {1}, and she was chased by {2} accidentally. This child is called {3}, and she was accidentally hit by an accident",
  "当前语言（中文:zh）的执行结果是": "The execution result of the current language (Chinese: zh) is",
  "百度翻译成英语的结果是": "The result of Baidu's translation into English is",
  "设置语言、语言包及其他配置项": "Set language, language pack and other configuration items",
  "指定当前语言": "Specify the current language",
  "设置当前语言包": "Set Current Language Pack",
  "设置{0}函数中动态参数起始下标，默认为0": "Set the starting subscript of the dynamic parameter in the {0} function. The default is 0",
  "{0}的值默认跟语言代码相对应，如需自定义，需参考{1}的用法": "The value of {0} corresponds to the language code by default. If you need to customize, please refer to the usage of {1}",
  "获取独立于主程序的i18n函数": "Get i18n functions independent of the main program",
  "适用于服务端，每个接口响应需要做国际化的处理": "It is applicable to the server. Each interface response needs to be internationalized",
  "函数类型": "Function Type",
  "通用的格式化回调类型": "Common format callback type",
  "当前语言": "Current language",
  "动态参数": "dynamic parameter ",
  "日期（时间）的格式化回调函数类型": "Format callback function type of date (time)",
  "复数的格式化回调函数类型": "Formatting callback function type of complex number",
  "默认将量词和名词组合起来的字符串，不需要复数处理的语言可以直接返回该属性": "A string that combines quantifiers and nouns by default. Languages that do not need plural processing can directly return this property",
  "复数关键词": "Plural keyword",
  "名称": "name",
  "是否必设": "Required",
  "默认值": "Default",
  "是": "yes",
  "数据源相关配置": "Data source related configuration",
  "基础配置": "Basic configuration",
  "文档入口文件（绝对路径）": "Document entry file (absolute path)",
  "否": "no",
  "生成Markdown文件的路径（绝对路径）": "Path to generate Markdown file (absolute path)",
  "入口文件接收到的props属性": "Props attribute received by the entry file",
  "Source": "Source",
  "{0}配置": "{0} configuration",
  "命令": "command",
  "简写": "Abbreviation",
  "初始化配置文件": "Initialize Profile",
  "读取配置生成Markdown文件": "Read configuration to generate Markdown file",
  "执行如下命令": "Execute the following command",
  "假如未调整上面的默认配置，命令执行成功的话，会在根目录下生成对应的Markdown文件，最后生成的Markdown文本内容如下": "If the above default configuration is not adjusted and the command is executed successfully, the corresponding Markdown file will be generated in the root directory. The final generated Markdown text is as follows",
  "显示效果如下": "The display effect is as follows",
  "并且{0}内容发生调整，保存后，对应的Markdown文件也会实时同步变化": "And {0} content is adjusted. After saving, the corresponding Markdown file will also change synchronously in real time"
}