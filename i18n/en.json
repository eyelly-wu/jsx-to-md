{
  "特性": "characteristic",
  "实时渲染生成": "Real time rendering generation",
  "支持多个文档同时渲染": "Support simultaneous rendering of multiple documents",
  "原理": "principle",
  "该库主要由两部分构成": "The library is mainly composed of two parts",
  "命令行工具": "Command Line Tools",
  "函数API": "Function API",
  "一款支持通过 JSX 来编写 Markdown 的工具": "A tool that supports writing Markdown through JSX",
  "安装": "install",
  "或者": "perhaps",
  "​创建JSX文件": "Create JSX file",
  "在根目录下创建一个名为{0}的目录，并在该目录下创建{1}文件": "Create a directory named {0} under the root directory, and create {1} files under this directory",
  "其他相关文件": "Other relevant documents",
  "假如{0}的内容如下：": "Suppose the content of {0} is as follows:",
  "这里JSX语法采用的是 React.createElement 的形式，所以这里需要默认导入 React": "Here, the JSX syntax is React The form of createElement, so we need to import React by default",
  "初始化命令行配置文件": "Initialize command line configuration file",
  "在命令行终端输入如下命令，": "Enter the following command at the command line terminal,",
  "命令列表": "Command List",
  "更多命令": "More Commands",
  "然后会在当前目录下生成一个{0}的文件": "Then a {0} file will be generated in the current directory",
  "然后你的文件目录是这样的": "Then your file directory is like this",
  "调整{0}配置": "Adjust {0} configuration",
  "根据需求自行调整配置文件中的配置项，配置项的{0}": "Adjust the configuration items in the configuration file according to the requirements",
  "命令行": "command line",
  "说明": "explain",
  "默认的配置如下：": "The default configuration is as follows:",
  "执行生成命令": "Execute build command",
  "用法": "usage",
  "愿景": "vision",
  "为了让通过{0}来编写{1}成为件轻松且愉快的事{2}": "To make it easy and pleasant to write {1} through {0} {2}",
  "基础组件": "Basic components",
  "所以{0}和{1}这两者搭配使用效果更佳": "So {0} and {1} are better used together",
  "类型": "type",
  "名称": "name",
  "是否必设": "Required",
  "默认值": "Default",
  "是": "yes",
  "数据源相关配置": "Data source related configuration",
  "基础配置": "Basic configuration",
  "文档入口文件（绝对路径）": "Document entry file (absolute path)",
  "否": "no",
  "Source": "Source",
  "{0}配置": "{0} configuration",
  "命令": "command",
  "简写": "Abbreviation",
  "初始化配置文件": "Initialize Profile",
  "执行如下命令": "Execute the following command",
  "假如未调整上面的默认配置，命令执行成功的话，会在根目录下生成对应的Markdown文件，最后生成的Markdown文本内容如下": "If the above default configuration is not adjusted and the command is executed successfully, the corresponding Markdown file will be generated in the root directory. The final generated Markdown text is as follows",
  "显示效果如下": "The display effect is as follows",
  "并且{0}内容发生调整，保存后，对应的Markdown文件也会实时同步变化": "And {0} content is adjusted. After saving, the corresponding Markdown file will also change synchronously in real time",
  "生成 Markdown 文件的路径（绝对路径）": "Path to generate Markdown file (absolute path)",
  "入口文件接收到的 props 属性": "Props attribute received by the entry file",
  "读取配置生成 Markdown 文件": "Read configuration to generate Markdown file",
  "参数名": "Parameter name",
  "参数值": "Parameter value",
  "适用命令": "Applicable order",
  "指定是否启用文件监听，该配置默认开启，启用后相关文件变化会重新生成 Markdown 文件": "Specifies whether to enable file monitoring. This configuration is enabled by default. After enabling, the relevant file changes will regenerate the Markdown file",
  "命令参数": "Command parameters",
  "支持原生 HTML": "Native HTML support",
  "提供对标 Markdown 语法的基础组件及 render 函数": "Provides basic components and render functions of benchmarking Markdown syntax",
  "用于替代 Markdown 语法的基础组件": "Basic components for replacing Markdown syntax",
  "render 函数": "Render function",
  "渲染 JSX 编写的内容，返回生成的字符内容": "Render the content written by JSX and return the generated character content",
  "解析配置文件、执行 render 逻辑，最后生成 Markdown 文件": "Parse configuration files, execute render logic, and finally generate Markdown files"
}